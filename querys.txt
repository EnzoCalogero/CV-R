job activity:

SELECT [jobinitfrom]
      ,[clientname]
      ,[idataagent]
      ,[data_sp]
      ,[jobstatus]
	,[backuplevel]
      ,[startdate]
      ,[enddate]
      ,[durationunixsec]
       ,[numstreams]
      ,[numbytesuncomp]
      ,[numbytescomp]
      ,[numobjects]
       FROM [commserv].[dbo].[CommCellBackupInfo] where [commserv].[dbo].[CommCellBackupInfo].[startdate] > '2014-05-01'

!!!!!!!  full one.....!!!!!!!!!!!!!!!!!!!!!!

SELECT * FROM [commserv].[dbo].[CommCellBackupInfo] where [commserv].[dbo].[CommCellBackupInfo].[startdate] > '2014-07-01'




modify type on Excel for start and enddate.
dd/mm/yyyy hh:mm


Then modified the two columns
numbytesuncomp	numbytescomp
with decimals --> 0
 

###########################################
dedup activity:


SELECT  [SIDBStoreId]
      ,[SubStoreId]
       ,[HistoryType]
      ,[ModifiedTime]
      ,[PrimaryEntries]
      ,[SecondaryEntries]
      ,[AvgQITime]
      ,[AvgQITimeSampleCount]
      ,[NumOfConnections]
      ,[ZeroRefCount]
      ,[DataSizeToPrune]
      ,[SizeOccupied]
      ,[DDBManagedSize]
      ,[DeleteChunkCount]
  FROM [commserv].[dbo].[IdxSIDBUsageHistory]

on Execl
create a new column "Date"
on the first availabel cell add this (amend appropriately)
=((E2)/86400)+(DATEVALUE("1-1-1970") )

then modified the cells format into
 dd/mm/yyyy hh:mm
######################################################

AUXCOPY


SELECT *  FROM [commserv].[dbo].[CommCellAuxCopyInfo] where startdate >'2014-06-01'
then modified the cells format into
 dd/mm/yyyy hh:mm

##################################################
Chunks

select * from archChunkMapping

SELECT *  FROM [commserv].[dbo].[archChunkMapping]where physicalSize > 17179869184



##################################################
Identify unfriendly dedup backup clients:

CommCellClientLevelBkpJobSummary


##################################################
Identify number of tapes used

CommCellClientLevelBkpJobSummary
#################################################

 To convert a binary PerfMon log to a CSV file, use the command:

relog logfile.blg -f csv -o logfile.csv


