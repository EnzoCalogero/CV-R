Jobs_night<-Jobs_RAW
Jobs_night$hours<-hour(Jobs_night$Date.and.Time)
Jobs_night<-subset(Jobs_night,Jobs_night$hours<10)
Jobs_night$Date.and.Time<-floor_date(Jobs_night$Date.and.Time, "day")
data_nightT
```{r,echo=FALSE,message=FALSE,fig.height=6,fig.width=12}
library(dygraphs)
library(data.table)
library(dplyr)
library(xts)
library(lubridate) #Date management
library(ggplot2)
library(tidyr)
library(reshape2)
##import the file
file='c:/dati/Jobs_Analisis/globalJobsLON3A.csv'
#Jobs_RAW <- read.csv(file,sep=",")
Jobs_RAW <- fread(file, header = T, sep = ',')
#View(Jobs_RAW)
Jobs_RAW$Date.and.Time<-ymd_hms(Jobs_RAW$Date)
Jobs_RAW$Date.and.Time<-floor_date(Jobs_RAW$Date.and.Time, "hour")
#  View(Jobs_RAW)
# Creazione Dataframe per singolo Day
Jobs_night<-Jobs_RAW
Jobs_night$hours<-hour(Jobs_night$Date.and.Time)
Jobs_night<-subset(Jobs_night,Jobs_night$hours<10)
Jobs_night$Date.and.Time<-floor_date(Jobs_night$Date.and.Time, "day")
data_wide <- dcast(Jobs_RAW, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#View(data_wide)
#rm(Jobs_RAW)
data_wide<-subset(data_wide,data_wide$Status== "Waiting")
data_wide<-subset(data_wide,data_wide$Date.and.Time> ymd_hms(now()-days(15)))
#Creazione per night dataframe
data_night <- dcast(Jobs_night, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
data_night<-subset(data_night,data_night$Status== "Waiting")
data_night<-subset(data_night,data_night$Date.and.Time> ymd_hms(now()-days(15)))
data_nightT<-subset(data_night,data_night$CS== "CS406")
data_nightT
col(data_nightT)
col(data_night)
col(data_nightT)
row(data_night)
row(data_nightT)
nrow(data_nightT)
nrow(data_night)
if(nrow(data_nightT)>0){
data_nightT<-subset(data_night,data_night$CS== "CS406")
xts_Jobs<-xts(data_nightT[,-1],order.by=data_nightT$Date.and.Time)
dygraph(xts_Jobs,main="CS406")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
library(dygraphs)
library(data.table)
library(dplyr)
library(xts)
library(lubridate) #Date management
library(ggplot2)
library(tidyr)
library(reshape2)
library(DT)
file='c:/dati/Jobs_Analisis/globalJobsLON3A.csv'
#Jobs_RAW <- read.csv(file,sep=",")
Jobs_RAW <- fread(file, header = T, sep = ',')
#View(Jobs_RAW)
Jobs_RAW$Date.and.Time<-ymd_hms(Jobs_RAW$Date)
Jobs_RAW$Date.and.Time<-floor_date(Jobs_RAW$Date.and.Time, "hour")
#  View(Jobs_RAW)
# Creazione Dataframe per singolo Day
Jobs_night<-Jobs_RAW
Jobs_night$hours<-hour(Jobs_night$Date.and.Time)
Jobs_night<-subset(Jobs_night,Jobs_night$hours<10)
Jobs_night$Date.and.Time<-floor_date(Jobs_night$Date.and.Time, "day")
data_wide <- dcast(Jobs_RAW, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
View(Jobs_night)
library(dygraphs)
library(data.table)
library(dplyr)
library(xts)
library(lubridate) #Date management
library(ggplot2)
library(tidyr)
library(reshape2)
library(DT)
##import the file
file='c:/dati/Jobs_Analisis/globalJobsLON3A.csv'
#Jobs_RAW <- read.csv(file,sep=",")
Jobs_RAW <- fread(file, header = T, sep = ',')
#View(Jobs_RAW)
Jobs_RAW$Date.and.Time<-ymd_hms(Jobs_RAW$Date)
Jobs_RAW$Date.and.Time<-floor_date(Jobs_RAW$Date.and.Time, "hour")
Jobs_RAW<-subset(Jobs_RAW,Jobs_RAW$Status== "Waiting")
#  View(Jobs_RAW)
# Creazione Dataframe per singolo Day
Jobs_night<-Jobs_RAW
Jobs_night$hours<-hour(Jobs_night$Date.and.Time)
Jobs_night<-subset(Jobs_night,Jobs_night$hours<10)
Jobs_night$Date.and.Time<-floor_date(Jobs_night$Date.and.Time, "day")
#Jobs_night<-subset(Jobs_night,Jobs_night$Status== "Waiting")
data_wide <- dcast(Jobs_RAW, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#View(data_wide)
#rm(Jobs_RAW)
#data_wide<-subset(data_wide,data_wide$Status== "Waiting")
data_wide<-subset(data_wide,data_wide$Date.and.Time> ymd_hms(now()-days(15)))
#Creazione per night dataframe
#data_night<-subset(data_night,data_night$Status== "Waiting")
data_night <- dcast(Jobs_night, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#data_night<-subset(data_night,data_night$Status== "Waiting")
data_night<-subset(data_night,data_night$Date.and.Time> ymd_hms(now()-days(15)))
View(Jobs_night)
summary(Jobs_night)
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+Storage.Policy,sum,data=Jobs_night)
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+Storage Policy,sum,data=Jobs_night)
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+Storage,sum,data=Jobs_night)
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+'Storage Policy',sum,data=Jobs_night)
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+`Storage Policy`,sum,data=Jobs_night)
View(Jobs_night_Daily)
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+`Storage Policy`,sum,data=Jobs_night)
Jobs_night_Daily<-subset(Jobs_night_Daily,Jobs_night_Daily$Date.and.Time > ymd_hms(now()-days(15)))
View(Jobs_night_Daily)
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+`Storage Policy`,sum,data=Jobs_night)
Jobs_night_Daily<-subset(Jobs_night_Daily,Jobs_night_Daily$Date.and.Time > ymd_hms(now()-days(15)))
Jobs_night_Daily_C <- dcast(Jobs_night_Daily, Date.and.Time +CS  ~ `Storage Policy`,max,value.var="Number")
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS401 Waiting Jobs")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+`Storage Policy`,sum,data=Jobs_night)
Jobs_night_Daily<-subset(Jobs_night_Daily,Jobs_night_Daily$Date.and.Time > ymd_hms(now()-days(15)))
Jobs_night_Daily_C <- dcast(Jobs_night_Daily, Date.and.Time +CS  ~ `Storage Policy`,max,value.var="Number")
xts_night_Daily_C<-xts(Jobs_night_Daily_C[,-1],order.by=Jobs_night_Daily_C$Date.and.Time)
dygraph(xts_night_Daily_C,main="xts_night_Daily_C")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
##import the file
file='c:/dati/Jobs_Analisis/globalJobsLON3A.csv'
#Jobs_RAW <- read.csv(file,sep=",")
Jobs_RAW <- fread(file, header = T, sep = ',')
#View(Jobs_RAW)
Jobs_RAW$Date.and.Time<-ymd_hms(Jobs_RAW$Date)
Jobs_RAW$Date.and.Time<-floor_date(Jobs_RAW$Date.and.Time, "hour")
Jobs_RAW<-subset(Jobs_RAW,Jobs_RAW$Status== "Waiting")
#  View(Jobs_RAW)
# Creazione Dataframe per singolo Day
Jobs_night<-Jobs_RAW
Jobs_night$hours<-hour(Jobs_night$Date.and.Time)
Jobs_night<-subset(Jobs_night,Jobs_night$hours<10)
Jobs_night$Date.and.Time<-floor_date(Jobs_night$Date.and.Time, "day")
#Jobs_night<-subset(Jobs_night,Jobs_night$Status== "Waiting")
data_wide <- dcast(Jobs_RAW, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#View(data_wide)
#rm(Jobs_RAW)
#data_wide<-subset(data_wide,data_wide$Status== "Waiting")
data_wide<-subset(data_wide,data_wide$Date.and.Time> ymd_hms(now()-days(15)))
#Creazione per night dataframe
#data_night<-subset(data_night,data_night$Status== "Waiting")
data_night <- dcast(Jobs_night, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#data_night<-subset(data_night,data_night$Status== "Waiting")
data_night<-subset(data_night,data_night$Date.and.Time> ymd_hms(now()-days(15)))
Jobs_night$`Storage Policy`<-paste(Jobs_night$CS, Jobs_night$`Storage Policy`)
View(Jobs_night)
datatable(Jobs_night_Full)
library(dygraphs)
library(data.table)
library(dplyr)
library(xts)
library(lubridate) #Date management
library(ggplot2)
library(tidyr)
library(reshape2)
library(DT)
day_=15
hours_=9
##import the file
file='c:/dati/Jobs_Analisis/globalJobsLON3A.csv'
#Jobs_RAW <- read.csv(file,sep=",")
Jobs_RAW <- fread(file, header = T, sep = ',')
#View(Jobs_RAW)
Jobs_RAW$Date.and.Time<-ymd_hms(Jobs_RAW$Date)
Jobs_RAW$Date.and.Time<-floor_date(Jobs_RAW$Date.and.Time, "hour")
Jobs_RAW<-subset(Jobs_RAW,Jobs_RAW$Status== "Waiting")
#  View(Jobs_RAW)
# Creazione Dataframe per singolo Day
Jobs_night<-Jobs_RAW
Jobs_night$hours<-hour(Jobs_night$Date.and.Time)
Jobs_night<-subset(Jobs_night,Jobs_night$hours<10)
Jobs_night$Date.and.Time<-floor_date(Jobs_night$Date.and.Time, "day")
#Jobs_night<-subset(Jobs_night,Jobs_night$Status== "Waiting")
data_wide <- dcast(Jobs_RAW, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#View(data_wide)
#rm(Jobs_RAW)
#data_wide<-subset(data_wide,data_wide$Status== "Waiting")
data_wide<-subset(data_wide,data_wide$Date.and.Time> ymd_hms(now()-days(15)))
#Creazione per night dataframe
#data_night<-subset(data_night,data_night$Status== "Waiting")
data_night <- dcast(Jobs_night, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#data_night<-subset(data_night,data_night$Status== "Waiting")
data_night<-subset(data_night,data_night$Date.and.Time> ymd_hms(now()-days(15)))
```
```{r,echo=FALSE,message=FALSE,warning=FALSEfig.height=6,fig.width=12}
Jobs_night$`Storage Policy`<-paste(Jobs_night$CS, Jobs_night$`Storage Policy`)
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+`Storage Policy`,sum,data=Jobs_night)
Jobs_night_Daily<-subset(Jobs_night_Daily,Jobs_night_Daily$Date.and.Time > ymd_hms(now()-days(15)))
Jobs_night_Full<-aggregate(Number~CS+`Storage Policy`,sum,data=Jobs_night_Daily)
Jobs_night_Daily_C <- dcast(Jobs_night_Daily, Date.and.Time +CS  ~ `Storage Policy`,max,value.var="Number")
xts_night_Daily_C<-xts(Jobs_night_Daily_C[,-1],order.by=Jobs_night_Daily_C$Date.and.Time)
datatable(Jobs_night_Full)
View(Jobs_night_Full)
datatable(Jobs_night_Full,options = list(order=list(3,'asc')))
datatable(Jobs_night_Full,options = list(order=list(3,'des')))
datatable(Jobs_night_Full,options = list(order=list(3,'des')),pageLength = 20)
datatable(Jobs_night_Full,options = list(order=list(3,'des'),pageLength = 20))
Jobs_night_Full<-aggregate(Number~`Storage Policy`,sum,data=Jobs_night_Daily)
library(dygraphs)
library(data.table)
library(dplyr)
library(xts)
library(lubridate) #Date management
library(ggplot2)
library(tidyr)
library(reshape2)
library(DT)
library(dygraphs)
library(data.table)
library(dplyr)
library(xts)
library(lubridate) #Date management
library(ggplot2)
library(tidyr)
library(reshape2)
library(DT)
day_=15   #days used for the report
hours_=9  #until what time in the morning used for the computation
entry_=10 #Number of lines to be used for generating the graphs.
#print("Created on")
now()
##import the file
file='c:/dati/Jobs_Analisis/globalJobsLON3A.csv'
#Jobs_RAW <- read.csv(file,sep=",")
Jobs_RAW <- fread(file, header = T, sep = ',')
#View(Jobs_RAW)
Jobs_RAW$Date.and.Time<-ymd_hms(Jobs_RAW$Date)
Jobs_RAW$Date.and.Time<-floor_date(Jobs_RAW$Date.and.Time, "hour")
Jobs_RAW<-subset(Jobs_RAW,Jobs_RAW$Status== "Waiting")
#  View(Jobs_RAW)
# Creazione Dataframe per singolo Day
Jobs_night<-Jobs_RAW
Jobs_night$hours<-hour(Jobs_night$Date.and.Time)
Jobs_night<-subset(Jobs_night,Jobs_night$hours<hours_)
Jobs_night$Date.and.Time<-floor_date(Jobs_night$Date.and.Time, "day")
#Jobs_night<-subset(Jobs_night,Jobs_night$Status== "Waiting")
##import the file
file='c:/dati/Jobs_Analisis/globalJobsLON3A.csv'
#Jobs_RAW <- read.csv(file,sep=",")
Jobs_RAW <- fread(file, header = T, sep = ',')
#View(Jobs_RAW)
Jobs_RAW$Date.and.Time<-ymd_hms(Jobs_RAW$Date)
Jobs_RAW$Date.and.Time<-floor_date(Jobs_RAW$Date.and.Time, "hour")
Jobs_RAW<-subset(Jobs_RAW,Jobs_RAW$Status== "Waiting")
#  View(Jobs_RAW)
# Creazione Dataframe per singolo Day
Jobs_night<-Jobs_RAW
Jobs_night$hours<-hour(Jobs_night$Date.and.Time)
Jobs_night<-subset(Jobs_night,Jobs_night$hours<hours_)
Jobs_night$Date.and.Time<-floor_date(Jobs_night$Date.and.Time, "day")
#Jobs_night<-subset(Jobs_night,Jobs_night$Status== "Waiting")
#Espansione per i dati generici...
data_wide <- dcast(Jobs_RAW, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#View(data_wide)
#rm(Jobs_RAW)
#data_wide<-subset(data_wide,data_wide$Status== "Waiting")
data_wide<-subset(data_wide,data_wide$Date.and.Time> ymd_hms(now()-days(day_)))
#Creazione per night dataframe
#data_night<-subset(data_night,data_night$Status== "Waiting")
data_night <- dcast(Jobs_night, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#data_night<-subset(data_night,data_night$Status== "Waiting")
data_night<-subset(data_night,data_night$Date.and.Time> ymd_hms(now()-days(day_)))
Jobs_night$`Storage Policy`<-paste(Jobs_night$CS, Jobs_night$`Storage Policy`)
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+`Storage Policy`,sum,data=Jobs_night)
Jobs_night_Daily<-subset(Jobs_night_Daily,Jobs_night_Daily$Date.and.Time > ymd_hms(now()-days(day_)))
Jobs_night_Full<-aggregate(Number~`Storage Policy`,sum,data=Jobs_night_Daily)
##Graph
Jobs_night_Daily_C <- dcast(Jobs_night_Daily, Date.and.Time +CS  ~ `Storage Policy`,max,value.var="Number")
xts_night_Daily_C<-xts(Jobs_night_Daily_C[,-1],order.by=Jobs_night_Daily_C$Date.and.Time)
Jobs_night_Full$WJxH<-Jobs_night_Full$Number
Jobs_night_Full$Number<-NULL
datatable(Jobs_night_Full,options = list(rownames = FALSE,order=list(2,'des'),pageLength = 10))
Jobs_night_Daily$WJxH<-Jobs_night_Daily$Number
Jobs_night_Daily$Number<-NULL
Jobs_night_Daily$`Week Day`<-wday(Jobs_night_Daily$Date.and.Time, label=TRUE)
View(Jobs_night_Daily)
Jobs_night_Daily<-Jobs_night_Daily[c('Date.and.Time','Week Day','Storage Policy','WJxH')]
datatable(Jobs_night_Daily)
View(Jobs_night_Daily)
class(Jobs_night_Daily)
class(Jobs_night_Daily$Date.and.Time)
Jobs_night_Daily$Date.and.Time
as.date(Jobs_night_Daily$Date.and.Time)
as.Date(Jobs_night_Daily$Date.and.Time)
library(dygraphs)
library(data.table)
library(dplyr)
library(xts)
library(lubridate) #Date management
library(ggplot2)
library(tidyr)
library(reshape2)
library(DT)
day_=15   #days used for the report
hours_=9  #until what time in the morning used for the computation
entry_=15 #Number of lines to be used for generating the graphs.
#print("Created on")
now()
file='c:/dati/Jobs_Analisis/ord1/globalJobsord1A.csv'
#Jobs_RAW <- read.csv(file,sep=",")
Jobs_RAW <- fread(file, header = T, sep = ',')
#View(Jobs_RAW)
Jobs_RAW$Date.and.Time<-ymd_hms(Jobs_RAW$Date)
Jobs_RAW$Date.and.Time<-floor_date(Jobs_RAW$Date.and.Time, "hour")
Jobs_RAW<-subset(Jobs_RAW,Jobs_RAW$Status== "Waiting")
#  View(Jobs_RAW)
# Creazione Dataframe per singolo Day
Jobs_night<-Jobs_RAW
Jobs_night$hours<-hour(Jobs_night$Date.and.Time)
Jobs_night<-subset(Jobs_night,Jobs_night$hours<hours_)
Jobs_night$Date.and.Time<-floor_date(Jobs_night$Date.and.Time, "day")
#Jobs_night<-subset(Jobs_night,Jobs_night$Status== "Waiting")
#Espansione per i dati generici...
data_wide <- dcast(Jobs_RAW, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#View(data_wide)
#rm(Jobs_RAW)
#data_wide<-subset(data_wide,data_wide$Status== "Waiting")
data_wide<-subset(data_wide,data_wide$Date.and.Time> ymd_hms(now()-days(day_)))
#Creazione per night dataframe
#data_night<-subset(data_night,data_night$Status== "Waiting")
data_night <- dcast(Jobs_night, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#data_night<-subset(data_night,data_night$Status== "Waiting")
data_night<-subset(data_night,data_night$Date.and.Time> ymd_hms(now()-days(day_)))
#Preparazione data frame per Job Wait x Hour
Jobs_night$`Storage Policy`<-paste(Jobs_night$CS, Jobs_night$`Storage Policy`)
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+`Storage Policy`,sum,data=Jobs_night)
Jobs_night_Daily<-subset(Jobs_night_Daily,Jobs_night_Daily$Date.and.Time > ymd_hms(now()-days(day_)))
Jobs_night_Full<-aggregate(Number~`Storage Policy`,sum,data=Jobs_night_Daily)
##Graph
Jobs_night_Daily_C <- dcast(Jobs_night_Daily, Date.and.Time +CS  ~ `Storage Policy`,max,value.var="Number")
xts_night_Daily_C<-xts(Jobs_night_Daily_C[,-1],order.by=Jobs_night_Daily_C$Date.and.Time)
Jobs_night_Full$WJxH<-Jobs_night_Full$Number
Jobs_night_Full$Number<-NULL
#Jobs_night_Full<-Jobs_night_Full[ order(Jobs_night_Full$WJxH),]
datatable(Jobs_night_Full,options = list(rownames = FALSE,order=list(2,'des'),pageLength = 10))
Jobs_night_Daily$WJxH<-Jobs_night_Daily$Number
Jobs_night_Daily$Number<-NULL
Jobs_night_Daily$`Week Day`<-wday(Jobs_night_Daily$Date.and.Time, label=TRUE)
Jobs_night_Daily$Date.and.Time<-as.Date(Jobs_night_Daily$Date.and.Time)
Jobs_night_Daily<-Jobs_night_Daily[c('Date.and.Time','Week Day','Storage Policy','WJxH')]
datatable(Jobs_night_Daily,options = list(rownames = FALSE,order=list(4,'des'),pageLength = 15))
entry_=0 #N
data_widet<-subset(data_wide,data_wide$CS== "CS901")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS901 Waiting Jobs")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
data_widet<-subset(data_wide,data_wide$CS== "CS902")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS902")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
ata_widet<-subset(data_wide,data_wide$CS== "CS403")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS903")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
data_widet<-subset(data_wide,data_wide$CS== "CS903")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS903")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
data_widet<-subset(data_wide,data_wide$CS== "CS904")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS904")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
data_widet<-subset(data_wide,data_wide$CS== "CS905")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS905")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
library(dygraphs)
library(data.table)
library(dplyr)
library(xts)
library(lubridate) #Date management
library(ggplot2)
library(tidyr)
library(reshape2)
library(DT)
day_=15   #days used for the report
hours_=9  #until what time in the morning used for the computation
entry_=0 #Number of lines to be used for generating the graphs.
#print("Created on")
now()
##import the file
file='c:/dati/Jobs_Analisis/dfw1/globalJobsdfw1A.csv'
#Jobs_RAW <- read.csv(file,sep=",")
Jobs_RAW <- fread(file, header = T, sep = ',')
#View(Jobs_RAW)
Jobs_RAW$Date.and.Time<-ymd_hms(Jobs_RAW$Date)
Jobs_RAW$Date.and.Time<-floor_date(Jobs_RAW$Date.and.Time, "hour")
Jobs_RAW<-subset(Jobs_RAW,Jobs_RAW$Status== "Waiting")
#  View(Jobs_RAW)
# Creazione Dataframe per singolo Day
Jobs_night<-Jobs_RAW
Jobs_night$hours<-hour(Jobs_night$Date.and.Time)
Jobs_night<-subset(Jobs_night,Jobs_night$hours<hours_)
Jobs_night$Date.and.Time<-floor_date(Jobs_night$Date.and.Time, "day")
#Jobs_night<-subset(Jobs_night,Jobs_night$Status== "Waiting")
#Espansione per i dati generici...
data_wide <- dcast(Jobs_RAW, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#View(data_wide)
#rm(Jobs_RAW)
#data_wide<-subset(data_wide,data_wide$Status== "Waiting")
data_wide<-subset(data_wide,data_wide$Date.and.Time> ymd_hms(now()-days(day_)))
data_night <- dcast(Jobs_night, Date.and.Time + Status+CS  ~ `Storage Policy`,max, value.var="Number")
#data_night<-subset(data_night,data_night$Status== "Waiting")
data_night<-subset(data_night,data_night$Date.and.Time> ymd_hms(now()-days(day_)))
Jobs_night$`Storage Policy`<-paste(Jobs_night$CS, Jobs_night$`Storage Policy`)
Jobs_night_Daily<-aggregate(Number~Date.and.Time+CS+`Storage Policy`,sum,data=Jobs_night)
Jobs_night_Daily<-subset(Jobs_night_Daily,Jobs_night_Daily$Date.and.Time > ymd_hms(now()-days(day_)))
Jobs_night_Full<-aggregate(Number~`Storage Policy`,sum,data=Jobs_night_Daily)
##Graph
Jobs_night_Daily_C <- dcast(Jobs_night_Daily, Date.and.Time +CS  ~ `Storage Policy`,max,value.var="Number")
xts_night_Daily_C<-xts(Jobs_night_Daily_C[,-1],order.by=Jobs_night_Daily_C$Date.and.Time)
Jobs_night_Full$WJxH<-Jobs_night_Full$Number
Jobs_night_Full$Number<-NULL
#Jobs_night_Full<-Jobs_night_Full[ order(Jobs_night_Full$WJxH),]
datatable(Jobs_night_Full,options = list(rownames = FALSE,order=list(2,'des'),pageLength = 10))
Jobs_night_Daily$WJxH<-Jobs_night_Daily$Number
Jobs_night_Daily$Number<-NULL
Jobs_night_Daily$`Week Day`<-wday(Jobs_night_Daily$Date.and.Time, label=TRUE)
Jobs_night_Daily$Date.and.Time<-as.Date(Jobs_night_Daily$Date.and.Time)
Jobs_night_Daily<-Jobs_night_Daily[c('Date.and.Time','Week Day','Storage Policy','WJxH')]
datatable(Jobs_night_Daily,options = list(rownames = FALSE,order=list(4,'des'),pageLength = 15))
#dygraph(xts_night_Daily_C,main="xts_night_Daily_C")%>% dyRangeSelector() %>%
``{r,echo=FALSE,message=FALSE,fig.height=6,fig.width=12}
#CS401
data_widet<-subset(data_wide,data_wide$CS== "CS01")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS01 Waiting Jobs")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
data_widet<-subset(data_wide,data_wide$CS== "CS07")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS07")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
####night data
data_widet<-subset(data_wide,data_wide$CS== "CS12")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS12")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
data_widet<-subset(data_wide,data_wide$CS== "CS20")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS20")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
data_widet<-subset(data_wide,data_wide$CS== "CS20")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS20")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
data_widet<-subset(data_wide,data_wide$CS== "CS01")
if(nrow(data_widet)>entry_){
data_widet<-subset(data_wide,data_wide$CS== "CS01")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS01 Waiting Jobs")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
data_widet<-subset(data_wide,data_wide$CS== "CS01")
if(nrow(data_widet)>entry_){
xts_Jobs<-xts(data_widet[,-1],order.by=data_widet$Date.and.Time)
dygraph(xts_Jobs,main="CS01 Waiting Jobs")%>% dyRangeSelector() %>%
dyLegend(show = "follow")
}
memory.limit()
ls()
rm(list=ls())
ls()
source('C:/Users/enzo7311/Dropbox/Public/cv_R/CV-R/MMDeleteAF.R')
MMAFDeleted_Analysis()
install.packages("doBy")
MMAFDeleted_Analysis()
install.packages("lubridate")
MMAFDeleted_Analysis()
source('C:/Users/enzo7311/Dropbox/Public/cv_R/CV-R/MMDeleteAF.R')
source('C:/Users/enzo7311/Dropbox/Public/cv_R/CV-R/MMDeleteAF.R')
MMAFDeleted_Analysis()
source('C:/Users/enzo7311/Dropbox/Public/cv_R/CV-R/MMDeleteAF.R')
source('C:/Users/enzo7311/Dropbox/Public/cv_R/CV-R/MMDeleteAF.R')
MMAFDeleted_Analysis()
MMAFDeleted_Reader()
source('C:/Users/enzo7311/Dropbox/Public/cv_R/CV-R/MMDeleteAFReader.R')
MMAFDeleted_Reader()
